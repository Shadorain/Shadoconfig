# --== Shadorain Hyprland Keybinds ==-- #

# == Configuration Variables == #
$mod = ALT
$secMod = SUPER
$term = kitty
$editor = nvim
$statusbar = waybar
$browser = zen-browser
$launcher = anyrun
$bin = $HOME/.local/bin # Local binary path
$chrome = chromium --enable-features=UseOzonePlatform --ozone-platform=wayland --enable-features=WebRTCPipeWireCapturer --new-window

# == Applications == #
## -- General -- ##
bind = $mod SHIFT, Return, exec, $term
bind = $secMod, p, exec, hyprlock
bind = $secMod SHIFT, v, exec, bash -c "if pidof vigiland &> /dev/null; then kill -SIGINT $(pidof vigiland); notify-send 'Vigiland' 'Stopping vigiland'; exit; else vigiland && notify-send 'Vigiland' 'Vigiland started!'; fi" # Prevent Idle
bind = $secMod SHIFT, s, exec, wlogout -p layer-shell
bind = $secMod SHIFT, c, exec, hyprpicker -a
bind = $secMod, F1, exec, ~/.config/hypr/gamemode.sh

## -- Utilities -- ##
bind = $mod CTRL, b, exec, killall $statusbar; $statusbar
bind = $mod CTRL_SHIFT, b, exec, killall $statusbar
bind = $secMod, b, exec, $browser
bind = $secMod, e, exec, cosmic-files

## -- Clipboard -- ##
bind = $secMod, v, exec, anyrun --plugins libcliphist.so

## -- Notifications -- ##
bind = $mod, n, exec, swaync-client -t -sw # Toggle Window
bind = $mod CTRL, n, exec, swaync-client -d # Do not Disturb
bind = $mod SHIFT, n, exec, swaync-client -C # Close all
bind = $mod CTRL_SHIFT, n, exec, killall swaync && swaync & # swaync-client -R -rs # Reload

## -- Launcher -- ##
bind = $mod, SPACE, exec, $launcher
bind = $mod, p, exec, $launcher
bind = $mod CTRL, p, exec, $launcher --plugins librink.so

## -- Pyrpland -- ##
bind = $mod SHIFT, s, exec, pypr toggle ncmpcpp
bind = $mod SHIFT, t, exec, pypr toggle term
bind = $mod CTRL, SPACE, exec, pypr menu

# == EWW == #
# bind = SUPERSHIFT, d, exec, $HOME/.config/eww/scripts/toggle-dashfs.sh
# bind = SUPERSHIFT, i, exec, $HOME/.config/eww/scripts/toggle-osettings.sh --keypress
# bind = SUPERSHIFT, p, exec, $HOME/.config/eww/scripts/toggle-onotify.sh --keypress
# bind = $mod, Slash, exec, $HOME/.config/eww/scripts/toggle-overview.sh

# == Screenshot/Record == #
bind = , Print, exec, grim -o "$(hyprctl monitors -j | gojq -r '.[] | select(.focused == true)' | gojq -r '.name')" - | wl-copy; notify-send "Screenshot" "Monitor copied to clipboard" # Monitor screenshot
bind = SHIFT_CTRL, Print, exec, grim -g "$(slurp)" - | wl-copy # Area capture
bind = SHIFT, Print, exec, grim -g "$(slurp)" - | $bin/swappy -f - # Area with annotations
bind = $mod CTRL, Print, exec, sleep 5 && grim -g "$(slurp)" - | $bin/swappy -f - # Delayed area with annotations
bind = $mod CTRL_SHIFT, Print, exec, grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract -l eng "tmp.png" - | wl-copy && rm "tmp.png" # Extract text from image

bind = $secMod, Print, exec, $bin/srecord # Record
bind = $secMod SHIFT, Print, exec, $bin/srecord -a # Record with audio

# Screen modification
bind = $secMod SHIFT, l, exec, $bin/sunset # Night time screen mode
bind = $secMod SHIFT, p, exec, hyprctl dispatch dpms toggle # Toggle on/off screen

## -- Productivity -- ##
bind = $secMod, t, exec, $bin/todo # Todoist
bind = $secMod SHIFT, n, exec, $bin/notion
bind = $secMod CTRL_SHIFT, n, exec, $bin/obsidian
# bind = $secMod SHIFT, t, exec, tana
bind = $secMod SHIFT, t, exec, $chrome --app=https://app.tana.inc
bind = $secMod SHIFT, b, exec, $chrome --app=https://budget-track.web.app/
bind = $secMod SHIFT, m, exec, $chrome --app=https://messages.google.com/web/conversations
# bind = $secMod SHIFT, 0, exec, firefoxpwa site launch 01JD8MX2YRWG8RFFXVBRF9TGCA # Robinhood Legend
bind = $secMod SHIFT, 0, exec, $chrome --app=https://robinhood.com/legend

bind = $secMod SHIFT, a, exec, $HOME/.apps/Capacities-*.AppImage
bind = $secMod SHIFT, d, exec, code

## -- Extra -- ##
bind = $secMod CTRL, d, exec, discord
bind = $secMod CTRL, p, exec, $browser -new-window "https://192.168.1.211:8006" # Proxmox Server
bind = $secMod SHIFT, w, exec, waypaper
bind = $secMod CTRL, w, exec, waypaper --restore

# == Workspaces == #
bind = $mod CTRL_SHIFT, s, movetoworkspace, special
bind = $mod CTRL, s, togglespecialworkspace,

## -- [hyprsplit] -- ##
bind = ALT, 1, split:workspace, 1
bind = ALT, 2, split:workspace, 2
bind = ALT, 3, split:workspace, 3
bind = ALT, 4, split:workspace, 4
bind = ALT, 5, split:workspace, 5
bind = ALT, 6, split:workspace, 6
bind = ALT, 7, split:workspace, 7
bind = ALT, 8, split:workspace, 8
bind = ALT, 9, split:workspace, 9
bind = ALT_SHIFT, 1, split:movetoworkspacesilent, 1
bind = ALT_SHIFT, 2, split:movetoworkspacesilent, 2
bind = ALT_SHIFT, 3, split:movetoworkspacesilent, 3
bind = ALT_SHIFT, 4, split:movetoworkspacesilent, 4
bind = ALT_SHIFT, 5, split:movetoworkspacesilent, 5
bind = ALT_SHIFT, 6, split:movetoworkspacesilent, 6
bind = ALT_SHIFT, 7, split:movetoworkspacesilent, 7
bind = ALT_SHIFT, 8, split:movetoworkspacesilent, 8
bind = ALT_SHIFT, 9, split:movetoworkspacesilent, 9

bind = $mod, g, split:grabroguewindows
bind = $mod CTRL, w, split:swapactiveworkspaces, current 2
bind = $mod CTRL, e, split:swapactiveworkspaces, current 0
bind = $mod CTRL, r, split:swapactiveworkspaces, current 1

# == Monitor == #
bind = $mod, w, focusmonitor, 2
bind = $mod, e, focusmonitor, 0
bind = $mod, r, focusmonitor, 1
bind = $mod SHIFT, w, movewindow, mon:2
bind = $mod SHIFT, e, movewindow, mon:0
bind = $mod SHIFT, r, movewindow, mon:1

# == Management == #
bind = $mod SHIFT, c, killactive,
bind = $mod CTRL, Q, exit,
bind = $mod, t, togglefloating,
bind = $mod, f, fullscreen, 1
# bind = $mod CTLR_SHIFT, s, pin,

# -- Toggle all keybinds -- #
bind = $mod SHIFT, z, submap, clean
submap = clean
bind = $mod SHIFT, z, submap, reset
submap = reset


## -- Minimize -- ##
bind = $mod, z, togglespecialworkspace, min
bind = $mod, z, movetoworkspace, +0
bind = $mod, z, togglespecialworkspace, min
bind = $mod, z, movetoworkspace, special:min
bind = $mod, z, togglespecialworkspace, min
bind = $mod, x, togglespecialworkspace, min2
bind = $mod, x, movetoworkspace, +0
bind = $mod, x, togglespecialworkspace, min2
bind = $mod, x, movetoworkspace, special:min2
bind = $mod, x, togglespecialworkspace, min2

# == Layout == #
## -- Master -- ##
bind = $mod, Return, layoutmsg, swapwithmaster

## -- Dwindle -- ##
bind = $mod SHIFT, x, togglegroup, none
bind = $mod CTRL, x, togglesplit,
bind = $mod CTRL_SHIFT, x, changegroupactive, f

# == Window == #
bind = $mod, h, movefocus, l
bind = $mod, l, movefocus, r
bind = $mod, k, movefocus, u
bind = $mod, j, movefocus, d
bind = $mod SHIFT, h, movewindow, l
bind = $mod SHIFT, l, movewindow, r
bind = $mod SHIFT, k, movewindow, u
bind = $mod SHIFT, j, movewindow, d

## -- Resize -- ##
bind = $mod CTRL, h, resizeactive, -50 0
bind = $mod CTRL, l, resizeactive, 50 0
bind = $mod CTRL, k, resizeactive, 0 -50
bind = $mod CTRL, j, resizeactive, 0 50

# == Mouse == #
bindm = $mod, mouse:272, movewindow
bindm = $mod, mouse:273, resizewindow
bind = $mod, mouse_down, split:workspace, e+1
bind = $mod, mouse_up, split:workspace, e-1

# == Mulitmedia Controls == #
## -- Volume -- ##
bindl = , XF86AudioRaiseVolume, exec, pulsemixer --change-volume +2
bindl = , XF86AudioLowerVolume, exec, pulsemixer --change-volume -2
bindl = , XF86AudioMute, exec, pulsemixer --toggle-mute

## -- Music -- ##
bind = , XF86AudioNext, exec, mpc next
bind = , XF86AudioPrev, exec, mpc prev
bind = , XF86AudioPlay, exec, mpc toggle
bind = , XF86AudioStop, exec, mpc stop

## -- Other Audio Sources -- ##
bind = CTRL, XF86AudioNext, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
bind = CTRL, XF86AudioPrev, exec, playerctl previous
bind = CTRL, XF86AudioPlay, exec, playerctl play-pause

# == Plugins == #
bind = $mod, grave, hyprexpo:expo, toggle # can be: toggle, off/disable or on/enable
